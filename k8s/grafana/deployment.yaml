apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 777
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.0.1
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: grafana-env
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          volumeMounts:
            - name: pv
              mountPath: /var/lib/grafana
            - name: files
              mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
              subPath: datasource.yaml
              readOnly: true
          resources:
            requests:
              cpu: "0.01"
              memory: 100M
            limits:
              cpu: "0.8"
              memory: 200M
      volumes:
        - name: pv
          persistentVolumeClaim:
            claimName: grafana
        - name: files
          secret:
            secretName: grafana-files
      restartPolicy: Always
